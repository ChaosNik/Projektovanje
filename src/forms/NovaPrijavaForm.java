/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import data.dao.DAOFactory;
import data.dto.FakultetDTO;
import data.dto.MjestoPrebivalistaDTO;
import data.dto.PrijavaNaKonkursDTO;
import data.dto.SocijalniStatusDTO;
import data.dto.StudentDTO;
import static java.lang.Math.abs;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.concurrent.TimeUnit;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author DulleX
 */
public class NovaPrijavaForm extends javax.swing.JFrame {

    static int potvrdaVecPostojiPrijava = 0;

    public NovaPrijavaForm() {
        initComponents();

        int mjesec = Calendar.getInstance().get(Calendar.MONTH);
        int godina = Calendar.getInstance().get(Calendar.YEAR);
        String skolskaGodina = "";

        if (mjesec > 6) {
            skolskaGodina = godina + "/" + (godina + 1);
        } else {
            skolskaGodina = (godina - 1) + "/" + godina;
        }

        skolskaGodinaField.setText(skolskaGodina);

        nazivFakultetaCombo.removeAllItems();
        List<FakultetDTO> lista = DAOFactory.getDAOFactory().getFakultetDAO().fakulteti();

        for (FakultetDTO faks : lista) {
            nazivFakultetaCombo.addItem(faks.getNazivFakulteta());
        }

        napomenaText.setLineWrap(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        JMBField = new javax.swing.JTextField();
        postojiLiStudentUBaziButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        godinaStudijaField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        prosjekOcjenaField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        brojPosteField = new javax.swing.JTextField();
        prikaziBazuMjestaPrebivalistaButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        brojObnovljenihGodinaField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        telefonField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        kazneniBodoviField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        bezObaRoditeljaCheck = new javax.swing.JCheckBox();
        dijetePalogINestalogCheck = new javax.swing.JCheckBox();
        bezJednogRoditeljaCheck = new javax.swing.JCheckBox();
        invaliditetCheck = new javax.swing.JCheckBox();
        korisnikSocijalnePomociCheck = new javax.swing.JCheckBox();
        dijeteRVIVRSCheck = new javax.swing.JCheckBox();
        obaRoditeljaNezaposlenaCheck = new javax.swing.JCheckBox();
        jedanRoditeljNezaposlenCheck = new javax.swing.JCheckBox();
        studentIzViseclanePorodiceCheck = new javax.swing.JCheckBox();
        otkaziPrijavuButton = new javax.swing.JButton();
        sacuvajPrijavuButton = new javax.swing.JButton();
        nazivFakultetaCombo = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        skolskaGodinaField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        napomenaText = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        brojOdslusanihIspitaField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        brojPolozenihIspitaField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kreiranje prijave");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("JMB: ");

        jLabel2.setText("Unesite podatke o prijavi:");

        JMBField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMBFieldActionPerformed(evt);
            }
        });

        postojiLiStudentUBaziButton.setText("Postoji li student u bazi?");
        postojiLiStudentUBaziButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postojiLiStudentUBaziButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Godina studija: ");

        godinaStudijaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                godinaStudijaFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Prosjek ocjena:");

        jLabel5.setText("Broj pošte mjesta prebivališta:");

        brojPosteField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brojPosteFieldActionPerformed(evt);
            }
        });

        prikaziBazuMjestaPrebivalistaButton.setText("Prikaži bazu mjesta prebivališta");
        prikaziBazuMjestaPrebivalistaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prikaziBazuMjestaPrebivalistaButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Naziv fakulteta:");

        jLabel7.setText("Broj obnovljenih godina:");

        jLabel8.setText("Telefon:");

        jLabel9.setText("Email:");

        jLabel10.setText("Kazneni bodovi:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Socijalni status", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        bezObaRoditeljaCheck.setText("Bez oba roditelja");

        dijetePalogINestalogCheck.setText("Dijete palog i nestalog borca RS");

        bezJednogRoditeljaCheck.setText("Bez jednog roditelja");

        invaliditetCheck.setText("Invaliditet");

        korisnikSocijalnePomociCheck.setText("Korisnik socijalne pomoci");

        dijeteRVIVRSCheck.setText("Dijete RVI VRS");

        obaRoditeljaNezaposlenaCheck.setText("Oba roditelja nezaposlena");
        obaRoditeljaNezaposlenaCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obaRoditeljaNezaposlenaCheckActionPerformed(evt);
            }
        });

        jedanRoditeljNezaposlenCheck.setText("Jedan roditelj nezaposlen");

        studentIzViseclanePorodiceCheck.setText("Student iz višečlane porodice");
        studentIzViseclanePorodiceCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIzViseclanePorodiceCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bezObaRoditeljaCheck)
                    .addComponent(dijetePalogINestalogCheck)
                    .addComponent(bezJednogRoditeljaCheck)
                    .addComponent(invaliditetCheck)
                    .addComponent(korisnikSocijalnePomociCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dijeteRVIVRSCheck)
                    .addComponent(obaRoditeljaNezaposlenaCheck)
                    .addComponent(jedanRoditeljNezaposlenCheck)
                    .addComponent(studentIzViseclanePorodiceCheck))
                .addGap(89, 89, 89))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bezObaRoditeljaCheck)
                    .addComponent(dijeteRVIVRSCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dijetePalogINestalogCheck)
                    .addComponent(obaRoditeljaNezaposlenaCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bezJednogRoditeljaCheck)
                    .addComponent(jedanRoditeljNezaposlenCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(invaliditetCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(korisnikSocijalnePomociCheck))
                    .addComponent(studentIzViseclanePorodiceCheck))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        otkaziPrijavuButton.setText("Odustani");
        otkaziPrijavuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otkaziPrijavuButtonActionPerformed(evt);
            }
        });

        sacuvajPrijavuButton.setText("Sačuvaj Prijavu");
        sacuvajPrijavuButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sacuvajPrijavuButtonStateChanged(evt);
            }
        });
        sacuvajPrijavuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sacuvajPrijavuButtonActionPerformed(evt);
            }
        });

        nazivFakultetaCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nazivFakultetaComboActionPerformed(evt);
            }
        });

        jLabel11.setText("Školska godina:");

        skolskaGodinaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skolskaGodinaFieldActionPerformed(evt);
            }
        });

        napomenaText.setColumns(20);
        napomenaText.setRows(5);
        jScrollPane2.setViewportView(napomenaText);

        jLabel12.setText("Napomena:");

        jLabel13.setText("Broj odslušanih ispita:");

        jLabel14.setText("Broj položenih ispita: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(godinaStudijaField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9)
                                .addComponent(jLabel10))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(kazneniBodoviField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(telefonField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(brojObnovljenihGodinaField)
                                    .addComponent(emailField)
                                    .addComponent(brojPosteField)
                                    .addComponent(prosjekOcjenaField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nazivFakultetaCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(JMBField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(brojOdslusanihIspitaField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(brojPolozenihIspitaField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(72, 72, 72)
                        .addComponent(otkaziPrijavuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sacuvajPrijavuButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(postojiLiStudentUBaziButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(skolskaGodinaField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(prikaziBazuMjestaPrebivalistaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {JMBField, brojObnovljenihGodinaField, brojPosteField, emailField, godinaStudijaField, kazneniBodoviField, nazivFakultetaCombo, prosjekOcjenaField, telefonField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(skolskaGodinaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(postojiLiStudentUBaziButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(JMBField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(godinaStudijaField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(prosjekOcjenaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(brojPosteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(prikaziBazuMjestaPrebivalistaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nazivFakultetaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(brojObnovljenihGodinaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(telefonField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(kazneniBodoviField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(brojOdslusanihIspitaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(brojPolozenihIspitaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(otkaziPrijavuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(sacuvajPrijavuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JMBField, brojObnovljenihGodinaField, brojPosteField, emailField, godinaStudijaField, kazneniBodoviField, nazivFakultetaCombo, prosjekOcjenaField, skolskaGodinaField, telefonField});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void JMBFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMBFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JMBFieldActionPerformed

    private void godinaStudijaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_godinaStudijaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_godinaStudijaFieldActionPerformed

    private void brojPosteFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brojPosteFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brojPosteFieldActionPerformed

    private void postojiLiStudentUBaziButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postojiLiStudentUBaziButtonActionPerformed
        String jmbb = JMBField.getText();

        if (jmbb.length() != 13) {
            KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu JMB.", "Greška!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // int jmb = Integer.parseInt(jmbb);
        StudentDTO student = DAOFactory.getDAOFactory().getStudentDAO().student(jmbb);
        if (student == null) {
            JOptionPane novi = new JOptionPane();
            KonkursniRadnikForm.pozoviOptionPane(this, "Student ne postoji u bazi!", "", JOptionPane.INFORMATION_MESSAGE);

            UnesiNovogStudentaDialog UnesiNovogStudentaDialog = new UnesiNovogStudentaDialog(this, true, jmbb);
            UnesiNovogStudentaDialog.setVisible(true);

            //new UnesiNovogStudentaDialog().setVisible(true);
            //this.dispose();//to close the current jframe
        } else {
            JOptionPane novi = new JOptionPane();
            KonkursniRadnikForm.pozoviOptionPane(this, "Student postoji u bazi.", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_postojiLiStudentUBaziButtonActionPerformed

    private void prikaziBazuMjestaPrebivalistaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prikaziBazuMjestaPrebivalistaButtonActionPerformed

        TabelaDialog nova = new TabelaDialog(this, true);
        nova.setVisible(true);

    }//GEN-LAST:event_prikaziBazuMjestaPrebivalistaButtonActionPerformed

    private void otkaziPrijavuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otkaziPrijavuButtonActionPerformed
        new KonkursniRadnikForm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_otkaziPrijavuButtonActionPerformed

    public void pozoviButton() {
        sacuvajPrijavuButtonActionPerformed(new java.awt.event.ActionEvent(sacuvajPrijavuButton, NORMAL, ""));
    }


    private void sacuvajPrijavuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sacuvajPrijavuButtonActionPerformed

        String jmbb = JMBField.getText();
        String skolskaGodina = skolskaGodinaField.getText();

        if (potvrdaVecPostojiPrijava == 0) {
            PrijavaNaKonkursDTO staraPrijava = DAOFactory.getDAOFactory().getPrijavaNaKonkursDAO().prijava(jmbb, skolskaGodina);
            if (staraPrijava != null) {
                VecPostojiPrijava nova = new VecPostojiPrijava(this, true, jmbb, skolskaGodina, this);
                nova.setVisible(true);
                return;
            }
        }

        potvrdaVecPostojiPrijava = 0;

        try {

            String jmb = JMBField.getText();
            if (jmb.length() != 13) {
                KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu JMB.", "Greška!", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                StudentDTO student = DAOFactory.getDAOFactory().getStudentDAO().student(jmb);
                if (student == null) {
                    UnesiNovogStudentaOptionDialog novi = new UnesiNovogStudentaOptionDialog(this, true, jmb);
                    novi.setVisible(true);
                }
            }

            int godinaStudija = 0;
            if (godinaStudijaField.getText().isEmpty()) {
                KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu godine studija.", "Greška!", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                godinaStudija = Integer.parseInt(godinaStudijaField.getText());
                if (godinaStudija > 10 || godinaStudija < 1) {
                    KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu godine studija.", "Greška!", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            double prosjekOcjena;
            if (prosjekOcjenaField.getText().isEmpty()) {
                KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu prosjeka ocjena.", "Greška!", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                prosjekOcjena = Double.parseDouble(prosjekOcjenaField.getText());
                if (prosjekOcjena > 10 || prosjekOcjena < 1) {
                    KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu prosjeka ocjena.", "Greska!", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            int brojPoste = 0;
            if (brojPosteField.getText().isEmpty()) {
                KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu broja pošte.", "Greška!", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                brojPoste = Integer.parseInt(brojPosteField.getText());
            }

            int brojOdlusanihIspita = 0;
            int brojPolozenihIspita = 0;
            if (brojOdslusanihIspitaField.getText().isEmpty()) {
                KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu broja odslušanih ispita.", "Greška!", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                brojOdlusanihIspita = Integer.parseInt(brojOdslusanihIspitaField.getText());
            }

            if (brojPolozenihIspitaField.getText().isEmpty()) {
                KonkursniRadnikForm.pozoviOptionPane(this, "Greska pri unosu broja polozenih ispita.", "Greska!", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                brojPolozenihIspita = Integer.parseInt(brojPolozenihIspitaField.getText());
            }

            String nazivFakulteta = (String) nazivFakultetaCombo.getSelectedItem();

            short brojObnovljenihGodina = Short.parseShort(brojObnovljenihGodinaField.getText());

            String telefon = telefonField.getText();
            String email = emailField.getText();
            String napomena = napomenaText.getText();
            String username = LoginForm.username;

            double kazneniBodovi = 0;
            if (kazneniBodoviField.getText().isEmpty()) {
                KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu kaznenih bodova.", "Greška!", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                kazneniBodovi = abs(Double.parseDouble(kazneniBodoviField.getText()));
            }

            if (!skolskaGodina.matches("\\d{4}/\\d{4}")) {
                KonkursniRadnikForm.pozoviOptionPane(this, "Greška pri unosu školske godine. Potreban format je xxxx/yyyy.", "Greška!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            SocijalniStatusDTO socijalniStatus = new SocijalniStatusDTO();
            socijalniStatus.setBezJednogRoditelja(bezJednogRoditeljaCheck.isSelected());
            socijalniStatus.setBezObaRoditelja(bezObaRoditeljaCheck.isSelected());
            socijalniStatus.setDijetePalogINestalogBorcaRS(dijetePalogINestalogCheck.isSelected());
            socijalniStatus.setDijeteRVIVRS(dijeteRVIVRSCheck.isSelected());
            socijalniStatus.setInvaliditet(invaliditetCheck.isSelected());
            socijalniStatus.setJedanRoditeljNezaposlen(jedanRoditeljNezaposlenCheck.isSelected());
            socijalniStatus.setKorisnikSocijalnePomoci(korisnikSocijalnePomociCheck.isSelected());
            socijalniStatus.setObaRoditeljaNezaposlena(obaRoditeljaNezaposlenaCheck.isSelected());
            socijalniStatus.setStudentIzViseclanihPorodica(studentIzViseclanePorodiceCheck.isSelected());

            int idSocijalnogStatusa = -5;

            int postojiLi = DAOFactory.getDAOFactory().getSocijalniStatusDAO().daLiPostojiOvakav(socijalniStatus);
            if (postojiLi == -1) {
                String uspjelo = DAOFactory.getDAOFactory().getSocijalniStatusDAO().dodajSocijalniStatus(socijalniStatus);
                if (!uspjelo.equals("")) {
                    KonkursniRadnikForm.pozoviOptionPane(this, uspjelo, "Greška!", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                idSocijalnogStatusa = DAOFactory.getDAOFactory().getSocijalniStatusDAO().daLiPostojiOvakav(socijalniStatus);
            } else {
                idSocijalnogStatusa = postojiLi;
            }

            socijalniStatus.setIdSocijalnogStatusa(idSocijalnogStatusa);

            PrijavaNaKonkursDTO novaPrijava = new PrijavaNaKonkursDTO();
            novaPrijava.setBrojObnovljenihGodina(brojObnovljenihGodina);
            novaPrijava.setBrojPoste(brojPoste);
            novaPrijava.setEmail(email);
            novaPrijava.setGodinaStudija((short) godinaStudija);
            novaPrijava.setIdSocijalnogStatusa(idSocijalnogStatusa);
            novaPrijava.setJMB(jmb);
            novaPrijava.setKazneniBodovi(kazneniBodovi);
            novaPrijava.setNapomena(napomena);
            novaPrijava.setNazivFakulteta(nazivFakulteta);
            novaPrijava.setProsjekOcjena(prosjekOcjena);
            novaPrijava.setSkolskaGodina(skolskaGodina);
            novaPrijava.setTelefon(telefon);
            novaPrijava.setUsername(username);
            novaPrijava.setBrojOdslusanihIspita(brojOdlusanihIspita);
            novaPrijava.setBrojPolozenihIspita(brojPolozenihIspita);

            Double brojBodovaKandidata = DAOFactory.getDAOFactory().getPrijavaNaKonkursDAO().dodajPrijavu(novaPrijava);

            JOptionPane novi = new JOptionPane();
            KonkursniRadnikForm.pozoviOptionPane(this, "Broj osvojenih bodova je " + brojBodovaKandidata, "", JOptionPane.INFORMATION_MESSAGE);
            return;

        } catch (Exception e) {
            KonkursniRadnikForm.pozoviOptionPane(this, "Nisu popunjena sva polja.", "Greška!", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_sacuvajPrijavuButtonActionPerformed

    private void skolskaGodinaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skolskaGodinaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_skolskaGodinaFieldActionPerformed

    private void studentIzViseclanePorodiceCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIzViseclanePorodiceCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIzViseclanePorodiceCheckActionPerformed

    private void obaRoditeljaNezaposlenaCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obaRoditeljaNezaposlenaCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_obaRoditeljaNezaposlenaCheckActionPerformed

    private void nazivFakultetaComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nazivFakultetaComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nazivFakultetaComboActionPerformed

    private void sacuvajPrijavuButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sacuvajPrijavuButtonStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_sacuvajPrijavuButtonStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setIconImage(new ImageIcon(getClass().getResource("/Icons/NewIcon.png")).getImage());
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NovaPrijavaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NovaPrijavaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovaPrijavaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NovaPrijavaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NovaPrijavaForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JMBField;
    private javax.swing.JCheckBox bezJednogRoditeljaCheck;
    private javax.swing.JCheckBox bezObaRoditeljaCheck;
    private javax.swing.JTextField brojObnovljenihGodinaField;
    private javax.swing.JTextField brojOdslusanihIspitaField;
    private javax.swing.JTextField brojPolozenihIspitaField;
    private javax.swing.JTextField brojPosteField;
    private javax.swing.JCheckBox dijetePalogINestalogCheck;
    private javax.swing.JCheckBox dijeteRVIVRSCheck;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField godinaStudijaField;
    private javax.swing.JCheckBox invaliditetCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox jedanRoditeljNezaposlenCheck;
    private javax.swing.JTextField kazneniBodoviField;
    private javax.swing.JCheckBox korisnikSocijalnePomociCheck;
    private javax.swing.JTextArea napomenaText;
    private javax.swing.JComboBox<String> nazivFakultetaCombo;
    private javax.swing.JCheckBox obaRoditeljaNezaposlenaCheck;
    private javax.swing.JButton otkaziPrijavuButton;
    private javax.swing.JButton postojiLiStudentUBaziButton;
    private javax.swing.JButton prikaziBazuMjestaPrebivalistaButton;
    private javax.swing.JTextField prosjekOcjenaField;
    private javax.swing.JButton sacuvajPrijavuButton;
    private javax.swing.JTextField skolskaGodinaField;
    private javax.swing.JCheckBox studentIzViseclanePorodiceCheck;
    private javax.swing.JTextField telefonField;
    // End of variables declaration//GEN-END:variables
}
